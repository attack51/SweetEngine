#pragma once

//용도: 범용 define, typedef, enum 등을 모아둠
//접근: only SHeader.h

#define SAFE_DELETE(x) if (nullptr != x) { delete x; x = nullptr; }
#define SAFE_DELETE_ARRAY(x) if (nullptr != x) { delete[] x; x = nullptr; }

#define SPTR_SAFE_DELETE(x) if(nullptr != x) { x.reset(); x = nullptr; }
#define UPTR_SAFE_DELETE(x) if(nullptr != x) { x.reset(); x = nullptr; }

#define ARRAY_SIZE(a) (sizeof(a) / sizeof(a[0]))

#define FORWARD_DECL_PTR(type, name) \
    type name;\
    typedef name* name##Ptr

#define FORWARD_DECL_CONST_PTR(type, name) \
    type name;\
    typedef const name* name##Ptr

#define FORWARD_DECL_SPTR(type, name) \
    type name;\
    typedef std::shared_ptr<name> name##SPtr

#define FORWARD_DECL_CONST_SPTR(type, name) \
    type name;\
    typedef const std::shared_ptr<name> name##SPtr

#define FORWARD_DECL_UPTR(type, name) \
    type name;\
    typedef std::unique_ptr<name> name##UPtr

#define FORWARD_DECL_CONST_UPTR(type, name) \
    type name;\
    typedef const std::unique_ptr<name> name##UPtr

#define FORWARD_DECL_WPTR(type, name) \
    type name;\
    typedef std::weak_ptr<name> name##WPtr

#define FORWARD_DECL_CONST_WPTR(type, name) \
    type name;\
    typedef const std::weak_ptr<name> name##WPtr

#define DECLARE_DELEGATE(name, ret_type, ...) \
    typedef std::function<ret_type(__VA_ARGS__)> name

enum class SCullFace : uint8_t
{
    Back      = 0,
    Front     = 1,
    None      = 2,
};

enum class STopology : uint8_t
{
    PointList,
    LineList,
    LineStrip,
    TriangleList,
    TriangleStrip,
    TriangleFan,
    TessellationPatch,
};

enum class SFillMode : uint8_t
{
    Fill,
    Wire,
};

enum class SDepthMode : uint8_t
{
    TestAndWrite,
    OnlyTest,
    NoTest,
};

enum class SDepthOp : uint8_t
{
    Never,
    Less,
    Equal,
    LessOrEqual,
    Greater,
    NotEqual,
    GreaterOrEqual,
    Always,
};

enum class SVertexFormat : uint8_t
{
    SFloat,
    SFloat2,
    SFloat3,
    SFloat4,

    SSingle,
    SSingle2,
    SSingle3,
    SSingle4,

    UInt,
    UInt2,
    UInt3,
    UInt4,

    SInt,
    SInt2,
    SInt3,
    SInt4,

    UShort,
    UShort2,
    UShort3,
    UShort4,

    SShort,
    SShort2,
    SShort3,
    SShort4,

    UByte,
    UByte2,
    UByte3,
    UByte4,

    SByte,
    SByte2,
    SByte3,
    SByte4,
    
    R5G6B5,
    R4G4B4A4,
    R8G8B8,
    R8G8B8A8,
};

enum SColorWriteFlags : uint8_t
{
    SColorWrite_None    = 0,
    SColorWrite_Red     = 1,
    SColorWrite_Green   = 2,
    SColorWrite_Blue    = 4,
    SColorWrite_Alpha   = 8,
    SColorWrite_Color   = SColorWrite_Red | SColorWrite_Green | SColorWrite_Blue,
    SColorWrite_All     = SColorWrite_Color | SColorWrite_Alpha,
};

enum class SBlendOp : uint8_t
{
    Add,
    Sub,
    ReverseSub,
    Min,
    Max
};

enum class SBlendFactor : uint8_t
{
    Zero,
    One,
    SrcColor,
    InvSrcColor,
    DestColor,
    InvDestColor,
    SrcAlpha,
    InvSrcAlpha,
    DestAlpha,
    InvDestAlpha,
    ConstColor,
    InvConstColor,
    ConstAlpha,
    InvConstAlpha,
    SrcAlphaSaturate,
    Src1Color,
    InvScr1Color,
    Src1Alpha,
    InvSrc1Alpha,
};

enum class SBlendLogicOp
{
    Clear,
    And,
    AndReverse,
    Copy,
    AndInverted,
    NoOp,
    Xor,
    Or,
    Nor,
    Equivalent,
    Invert,
    OrReverse,
    CopyInverted,
    OrInverted,
    Nand,
    Set,
};

enum class SResult
{
    Success,
    Error_IO,
    Error_Generic
};

enum class STextureFileType
{
    Astc,
    Png,
    Ktx,
    Dds,
};

//TODO : 포멧이름 재정의 하기
enum class SFormat
{
    FORMAT_UNDEFINED = 0,

    FORMAT_RG4_UNORM_PACK8, FORMAT_FIRST = FORMAT_RG4_UNORM_PACK8,
    FORMAT_RGBA4_UNORM_PACK16,
    FORMAT_BGRA4_UNORM_PACK16,
    FORMAT_R5G6B5_UNORM_PACK16,
    FORMAT_B5G6R5_UNORM_PACK16,
    FORMAT_RGB5A1_UNORM_PACK16,
    FORMAT_BGR5A1_UNORM_PACK16,
    FORMAT_A1RGB5_UNORM_PACK16,

    FORMAT_R8_UNORM_PACK8,
    FORMAT_R8_SNORM_PACK8,
    FORMAT_R8_USCALED_PACK8,
    FORMAT_R8_SSCALED_PACK8,
    FORMAT_R8_UINT_PACK8,
    FORMAT_R8_SINT_PACK8,
    FORMAT_R8_SRGB_PACK8,

    FORMAT_RG8_UNORM_PACK8,
    FORMAT_RG8_SNORM_PACK8,
    FORMAT_RG8_USCALED_PACK8,
    FORMAT_RG8_SSCALED_PACK8,
    FORMAT_RG8_UINT_PACK8,
    FORMAT_RG8_SINT_PACK8,
    FORMAT_RG8_SRGB_PACK8,

    FORMAT_RGB8_UNORM_PACK8,
    FORMAT_RGB8_SNORM_PACK8,
    FORMAT_RGB8_USCALED_PACK8,
    FORMAT_RGB8_SSCALED_PACK8,
    FORMAT_RGB8_UINT_PACK8,
    FORMAT_RGB8_SINT_PACK8,
    FORMAT_RGB8_SRGB_PACK8,

    FORMAT_BGR8_UNORM_PACK8,
    FORMAT_BGR8_SNORM_PACK8,
    FORMAT_BGR8_USCALED_PACK8,
    FORMAT_BGR8_SSCALED_PACK8,
    FORMAT_BGR8_UINT_PACK8,
    FORMAT_BGR8_SINT_PACK8,
    FORMAT_BGR8_SRGB_PACK8,

    FORMAT_RGBA8_UNORM_PACK8,
    FORMAT_RGBA8_SNORM_PACK8,
    FORMAT_RGBA8_USCALED_PACK8,
    FORMAT_RGBA8_SSCALED_PACK8,
    FORMAT_RGBA8_UINT_PACK8,
    FORMAT_RGBA8_SINT_PACK8,
    FORMAT_RGBA8_SRGB_PACK8,

    FORMAT_BGRA8_UNORM_PACK8,
    FORMAT_BGRA8_SNORM_PACK8,
    FORMAT_BGRA8_USCALED_PACK8,
    FORMAT_BGRA8_SSCALED_PACK8,
    FORMAT_BGRA8_UINT_PACK8,
    FORMAT_BGRA8_SINT_PACK8,
    FORMAT_BGRA8_SRGB_PACK8,

    FORMAT_RGBA8_UNORM_PACK32,
    FORMAT_RGBA8_SNORM_PACK32,
    FORMAT_RGBA8_USCALED_PACK32,
    FORMAT_RGBA8_SSCALED_PACK32,
    FORMAT_RGBA8_UINT_PACK32,
    FORMAT_RGBA8_SINT_PACK32,
    FORMAT_RGBA8_SRGB_PACK32,

    FORMAT_RGB10A2_UNORM_PACK32,
    FORMAT_RGB10A2_SNORM_PACK32,
    FORMAT_RGB10A2_USCALED_PACK32,
    FORMAT_RGB10A2_SSCALED_PACK32,
    FORMAT_RGB10A2_UINT_PACK32,
    FORMAT_RGB10A2_SINT_PACK32,

    FORMAT_BGR10A2_UNORM_PACK32,
    FORMAT_BGR10A2_SNORM_PACK32,
    FORMAT_BGR10A2_USCALED_PACK32,
    FORMAT_BGR10A2_SSCALED_PACK32,
    FORMAT_BGR10A2_UINT_PACK32,
    FORMAT_BGR10A2_SINT_PACK32,

    FORMAT_R16_UNORM_PACK16,
    FORMAT_R16_SNORM_PACK16,
    FORMAT_R16_USCALED_PACK16,
    FORMAT_R16_SSCALED_PACK16,
    FORMAT_R16_UINT_PACK16,
    FORMAT_R16_SINT_PACK16,
    FORMAT_R16_SFLOAT_PACK16,

    FORMAT_RG16_UNORM_PACK16,
    FORMAT_RG16_SNORM_PACK16,
    FORMAT_RG16_USCALED_PACK16,
    FORMAT_RG16_SSCALED_PACK16,
    FORMAT_RG16_UINT_PACK16,
    FORMAT_RG16_SINT_PACK16,
    FORMAT_RG16_SFLOAT_PACK16,

    FORMAT_RGB16_UNORM_PACK16,
    FORMAT_RGB16_SNORM_PACK16,
    FORMAT_RGB16_USCALED_PACK16,
    FORMAT_RGB16_SSCALED_PACK16,
    FORMAT_RGB16_UINT_PACK16,
    FORMAT_RGB16_SINT_PACK16,
    FORMAT_RGB16_SFLOAT_PACK16,

    FORMAT_RGBA16_UNORM_PACK16,
    FORMAT_RGBA16_SNORM_PACK16,
    FORMAT_RGBA16_USCALED_PACK16,
    FORMAT_RGBA16_SSCALED_PACK16,
    FORMAT_RGBA16_UINT_PACK16,
    FORMAT_RGBA16_SINT_PACK16,
    FORMAT_RGBA16_SFLOAT_PACK16,

    FORMAT_R32_UINT_PACK32,
    FORMAT_R32_SINT_PACK32,
    FORMAT_R32_SFLOAT_PACK32,

    FORMAT_RG32_UINT_PACK32,
    FORMAT_RG32_SINT_PACK32,
    FORMAT_RG32_SFLOAT_PACK32,

    FORMAT_RGB32_UINT_PACK32,
    FORMAT_RGB32_SINT_PACK32,
    FORMAT_RGB32_SFLOAT_PACK32,

    FORMAT_RGBA32_UINT_PACK32,
    FORMAT_RGBA32_SINT_PACK32,
    FORMAT_RGBA32_SFLOAT_PACK32,

    FORMAT_R64_UINT_PACK64,
    FORMAT_R64_SINT_PACK64,
    FORMAT_R64_SFLOAT_PACK64,

    FORMAT_RG64_UINT_PACK64,
    FORMAT_RG64_SINT_PACK64,
    FORMAT_RG64_SFLOAT_PACK64,

    FORMAT_RGB64_UINT_PACK64,
    FORMAT_RGB64_SINT_PACK64,
    FORMAT_RGB64_SFLOAT_PACK64,

    FORMAT_RGBA64_UINT_PACK64,
    FORMAT_RGBA64_SINT_PACK64,
    FORMAT_RGBA64_SFLOAT_PACK64,

    FORMAT_RG11B10_UFLOAT_PACK32,
    FORMAT_RGB9E5_UFLOAT_PACK32,

    FORMAT_D16_UNORM_PACK16,
    FORMAT_D24_UNORM_PACK32,
    FORMAT_D32_SFLOAT_PACK32,
    FORMAT_S8_UINT_PACK8,
    FORMAT_D16_UNORM_S8_UINT_PACK32,
    FORMAT_D24_UNORM_S8_UINT_PACK32,
    FORMAT_D32_SFLOAT_S8_UINT_PACK64,

    FORMAT_RGB_DXT1_UNORM_BLOCK8,
    FORMAT_RGB_DXT1_SRGB_BLOCK8,
    FORMAT_RGBA_DXT1_UNORM_BLOCK8,
    FORMAT_RGBA_DXT1_SRGB_BLOCK8,
    FORMAT_RGBA_DXT3_UNORM_BLOCK16,
    FORMAT_RGBA_DXT3_SRGB_BLOCK16,
    FORMAT_RGBA_DXT5_UNORM_BLOCK16,
    FORMAT_RGBA_DXT5_SRGB_BLOCK16,
    FORMAT_R_ATI1N_UNORM_BLOCK8,
    FORMAT_R_ATI1N_SNORM_BLOCK8,
    FORMAT_RG_ATI2N_UNORM_BLOCK16,
    FORMAT_RG_ATI2N_SNORM_BLOCK16,
    FORMAT_RGB_BP_UFLOAT_BLOCK16,
    FORMAT_RGB_BP_SFLOAT_BLOCK16,
    FORMAT_RGBA_BP_UNORM_BLOCK16,
    FORMAT_RGBA_BP_SRGB_BLOCK16,

    FORMAT_RGB_ETC2_UNORM_BLOCK8,
    FORMAT_RGB_ETC2_SRGB_BLOCK8,
    FORMAT_RGBA_ETC2_UNORM_BLOCK8,
    FORMAT_RGBA_ETC2_SRGB_BLOCK8,
    FORMAT_RGBA_ETC2_UNORM_BLOCK16,
    FORMAT_RGBA_ETC2_SRGB_BLOCK16,
    FORMAT_R_EAC_UNORM_BLOCK8,
    FORMAT_R_EAC_SNORM_BLOCK8,
    FORMAT_RG_EAC_UNORM_BLOCK16,
    FORMAT_RG_EAC_SNORM_BLOCK16,

    FORMAT_RGBA_ASTC_4X4_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_4X4_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_5X4_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_5X4_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_5X5_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_5X5_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_6X5_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_6X5_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_6X6_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_6X6_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_8X5_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_8X5_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_8X6_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_8X6_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_8X8_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_8X8_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_10X5_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_10X5_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_10X6_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_10X6_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_10X8_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_10X8_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_10X10_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_10X10_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_12X10_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_12X10_SRGB_BLOCK16,
    FORMAT_RGBA_ASTC_12X12_UNORM_BLOCK16,
    FORMAT_RGBA_ASTC_12X12_SRGB_BLOCK16,

    FORMAT_RGB_PVRTC1_8X8_UNORM_BLOCK32,
    FORMAT_RGB_PVRTC1_8X8_SRGB_BLOCK32,
    FORMAT_RGB_PVRTC1_16X8_UNORM_BLOCK32,
    FORMAT_RGB_PVRTC1_16X8_SRGB_BLOCK32,
    FORMAT_RGBA_PVRTC1_8X8_UNORM_BLOCK32,
    FORMAT_RGBA_PVRTC1_8X8_SRGB_BLOCK32,
    FORMAT_RGBA_PVRTC1_16X8_UNORM_BLOCK32,
    FORMAT_RGBA_PVRTC1_16X8_SRGB_BLOCK32,
    FORMAT_RGBA_PVRTC2_4X4_UNORM_BLOCK8,
    FORMAT_RGBA_PVRTC2_4X4_SRGB_BLOCK8,
    FORMAT_RGBA_PVRTC2_8X4_UNORM_BLOCK8,
    FORMAT_RGBA_PVRTC2_8X4_SRGB_BLOCK8,

    FORMAT_RGB_ETC_UNORM_BLOCK8,
    FORMAT_RGB_ATC_UNORM_BLOCK8,
    FORMAT_RGBA_ATCA_UNORM_BLOCK16,
    FORMAT_RGBA_ATCI_UNORM_BLOCK16,

    FORMAT_L8_UNORM_PACK8,
    FORMAT_A8_UNORM_PACK8,
    FORMAT_LA8_UNORM_PACK8,
    FORMAT_L16_UNORM_PACK16,
    FORMAT_A16_UNORM_PACK16,
    FORMAT_LA16_UNORM_PACK16,

    FORMAT_BGR8_UNORM_PACK32,
    FORMAT_BGR8_SRGB_PACK32,

    FORMAT_RG3B2_UNORM_PACK8, FORMAT_LAST = FORMAT_RG3B2_UNORM_PACK8
};

#define SKIN_WEIGHT_COUNT 3
